% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/de_ebseq.R
\name{ebseq_pairwise}
\alias{ebseq_pairwise}
\title{Set up model matrices contrasts and do pairwise comparisons of all conditions
using EBSeq.}
\usage{
ebseq_pairwise(
  input = NULL,
  patterns = NULL,
  conditions = NULL,
  batches = NULL,
  model_cond = NULL,
  model_intercept = NULL,
  alt_model = NULL,
  model_batch = NULL,
  keepers = NULL,
  ng_vector = NULL,
  rounds = 10,
  target_fdr = 0.05,
  method = "pairwise_subset",
  norm = "median",
  force = FALSE,
  ...
)
}
\arguments{
\item{input}{Dataframe/vector or expt class containing data, normalization
state, etc.}

\item{patterns}{Set of expression patterns to query.}

\item{conditions}{Not currently used, but passed from all_pairwise()}

\item{batches}{Not currently used, but passed from all_pairwise()}

\item{model_cond}{Not currently used, but passed from all_pairwise()}

\item{model_intercept}{Not currently used, but passed from all_pairwise()}

\item{alt_model}{Not currently used, but passed from all_pairwise()}

\item{model_batch}{Not currently used, but passed from all_pairwise()}

\item{keepers}{Perform a specific set of contrasts instead of all?}

\item{ng_vector}{I think this is for isoform quantification, but am not yet
certain.}

\item{rounds}{Number of iterations for doing the multi-test}

\item{target_fdr}{Definition of 'significant'}

\item{method}{The default ebseq methodology is to create the set of all
possible 'patterns' in the data; for data sets which are more than
trivially complex, this is not tenable, so this defaults to subsetting the
data into pairs of conditions.}

\item{norm}{Normalization method to use.}

\item{force}{Force ebseq to accept bad data (notably NA containing stuff from proteomics.}

\item{...}{Extra arguments currently unused.}
}
\value{
List containing tables from ebseq, the conditions tested, and the
 ebseq table of conditions.
}
\description{
Invoking EBSeq is confusing, this should help.
}
\examples{
 \dontrun{
  expt <- create_expt(metadata = "sample_sheet.xlsx", gene_info = annotations)
  ebseq_de <- ebseq_pairwise(input = expt)
}
}
\seealso{
[limma_pairwise()] [deseq_pairwise()] [edger_pairwise()] [basic_pairwise()]
}
