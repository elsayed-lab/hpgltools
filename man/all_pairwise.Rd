% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/de_shared.R
\name{all_pairwise}
\alias{all_pairwise}
\title{Perform limma, DESeq2, EdgeR pairwise analyses.}
\usage{
all_pairwise(
  input = NULL,
  conditions = NULL,
  batches = NULL,
  model_cond = TRUE,
  modify_p = FALSE,
  model_batch = TRUE,
  filter = NULL,
  model_intercept = FALSE,
  extra_contrasts = NULL,
  alt_model = NULL,
  libsize = NULL,
  test_pca = TRUE,
  annot_df = NULL,
  parallel = TRUE,
  do_basic = TRUE,
  do_deseq = TRUE,
  do_ebseq = NULL,
  do_edger = TRUE,
  do_limma = TRUE,
  do_noiseq = TRUE,
  do_dream = FALSE,
  keepers = NULL,
  convert = "cpm",
  norm = "quant",
  verbose = TRUE,
  surrogates = "be",
  ...
)
}
\arguments{
\item{input}{Dataframe/vector or expt class containing count tables,
normalization state, etc.}

\item{conditions}{Factor of conditions in the experiment.}

\item{batches}{Factor of batches in the experiment.}

\item{model_cond}{Include condition in the model?  This is likely always true.}

\item{modify_p}{Depending on how it is used, sva may require a modification
of the p-values.}

\item{model_batch}{Include batch in the model?  This may be true/false/"sva"
or other methods supported by all_adjusters().}

\item{filter}{Added because I am tired of needing to filter the data before
invoking all_pairwise().}

\item{model_intercept}{Use an intercept model instead of cell means?}

\item{extra_contrasts}{Optional extra contrasts beyone the pairwise
comparisons.  This can be pretty neat, lets say one has conditions
A,B,C,D,E and wants to do (C/B)/A and (E/D)/A or (E/D)/(C/B) then use this
with a string like:
 "c_vs_b_ctrla = (C-B)-A, e_vs_d_ctrla = (E-D)-A, de_vs_cb = (E-D)-(C-B)".}

\item{alt_model}{Alternate model to use rather than just condition/batch.}

\item{libsize}{Library size of the original data to help voom().}

\item{test_pca}{Perform some tests of the data before/after applying a given
batch effect.}

\item{annot_df}{Annotations to add to the result tables.}

\item{parallel}{Use dopar to run limma, deseq, edger, and basic simultaneously.}

\item{do_basic}{Perform a basic analysis?}

\item{do_deseq}{Perform DESeq2 pairwise?}

\item{do_ebseq}{Perform EBSeq (caveat, this is NULL as opposed to TRUE/FALSE
so it can choose).}

\item{do_edger}{Perform EdgeR?}

\item{do_limma}{Perform limma?}

\item{do_noiseq}{Perform noiseq?}

\item{do_dream}{Perform dream?}

\item{keepers}{Limit the pairwise search to a set of specific contrasts.}

\item{convert}{Modify the data with a 'conversion' method for PCA?}

\item{norm}{Modify the data with a 'normalization' method for PCA?}

\item{verbose}{Print extra information while running?}

\item{surrogates}{Either a number of surrogates or method to estimate it.}

\item{...}{Picks up extra arguments into arglist.}
}
\value{
A list of limma, deseq, edger results.
}
\description{
This takes an expt object, collects the set of all possible pairwise
comparisons, sets up experimental models appropriate for the differential
expression analyses, and performs them.
}
\details{
This runs limma_pairwise(), deseq_pairwise(), edger_pairwise(),
basic_pairwise() each in turn. It collects the results and does some simple
comparisons among them.
}
\examples{
\dontrun{
 lotsodata <- all_pairwise(input = expt, model_batch = "svaseq")
 summary(lotsodata)
 ## limma, edger, deseq, basic results; plots; and summaries.
}
}
\seealso{
[limma_pairwise()] [edger_pairwise()] [deseq_pairwise()] [ebseq_pairwise()]
 [basic_pairwise()]
}
